@page "/certifications/addcertification"
@using IncomeGoalTracker.Core.Models.Ceu
@using IncomeGoalTracker.Core.Services.Interfaces
@inject ICertificateService CertificateService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject ILogger<Certificate> Logger
@rendermode InteractiveServer

<h3>Add New Certification</h3>

<EditForm Model="@cert" OnValidSubmit="OnValidSubmit" FormName="AddCertificationForm">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudCard>
            <MudCardHeader>
                <h3>Add New Certification</h3>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField Label="Certification Name" HelperText="Enter the name of the certification"
                @bind-Value="@cert.Name" For="(() => cert.Name)" />
                <MudTextField Label="Abbreviation" HelperText="Enter short abbreviation for the certification (like LMFT)"
                @bind-Value=@cert.Abbreviation For="(() => cert.Abbreviation)" />
                <MudDatePicker Label="Certification Expriation Date" @bind-Date="@_dueDate" ShowToolbar="false" PickerVariant="PickerVariant.Dialog"/>
                <MudNumericField Label="CEUs Required" HelperText="Total Number of CEU's required to maintain the certification"
                @bind-Value="@cert.CeusRequired" For="(() => cert.CeusRequired)" Min="0.0"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Add Certification</MudButton>
            </MudCardActions>
        </MudCard>
    </MudGrid>
</EditForm>

@code {
    CertificateView cert = new CertificateView();
    DateTime? _dueDate = DateTime.Today;

    public async Task OnValidSubmit(EditContext context)
    {
        if(_dueDate.HasValue)
        {
            Logger.LogInformation("Attempting to save the new certification");

            cert.CeuDueDate = DateOnly.FromDateTime(_dueDate.Value);

            int id = await CertificateService.AddCertificateAsync(cert);

            if (id > 0)
            {
                NavigationManager.NavigateTo("/certifications/viewcertifications");
            }
            else
            {
                Snackbar.Add("There was an error sving the certification");
            }
        }
    }
}
